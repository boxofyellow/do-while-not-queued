name: Keep the versions up-to-date
permissions:
  contents: write # we need write here, not for `Update main.yml to match new tags` (as that uses its own token), in stead for `Actions-R-Us/actions-tagger`

on:
  release:
    types: [published, edited]

jobs:
  actions-tagger:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Ensure we have the full history for versioning
          # Using the VERSIONING_PAT allows updating workflows files, it also means that when we push the main.yml will run for us
          token: ${{ secrets.VERSIONING_PAT }}

      # First check that the dist is up-to-date
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20

      - name: Install dependencies, ncc and build
        run: |
          npm install
          npm i -g @vercel/ncc
          ncc build index.js --license licenses.txt

      - name: Check for changes
        id: git-check
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git status --porcelain
          echo "changed=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT

      - name: Fail if dist is not up to date
        if: ${{ steps.git-check.outputs.changed != '0' }}
        run: |
          echo "dist is not up to date. Please run the build and commit the changes."
          exit 1

      - uses: Actions-R-Us/actions-tagger@330ddfac760021349fef7ff62b372f2f691c20fb # v2.0.3
        with:
          publish_latest_tag: true
          prefer_branch_releases: true

      - name: Update main.yml to match new tags
        run: |
          echo "GITHUB_REF: $GITHUB_REF"
          NEW_VERSION=$(echo "${GITHUB_REF#refs/tags/v}")
          echo "NEW_VERSION: $NEW_VERSION"
          MAJOR_VERSION=$(echo "$NEW_VERSION" | cut -d. -f1)
          echo "MAJOR_VERSION: $MAJOR_VERSION"
          git fetch origin main
          git checkout main

          # First sed: update only FULL_VERSION_TAG, write to main.yml.tmp
          sed -E "s|(boxofyellow\/do-while-not-queued@).*([[:space:]]+#[[:space:]]+FULL_VERSION_TAG)$|\1v$NEW_VERSION\2|g" .github/workflows/main.yml > .github/workflows/main.yml.tmp
          cat .github/workflows/main.yml.tmp

          # Second sed: update only MAJOR_VERSION_TAG, read from main.yml.tmp, write to main.yml
          sed -E "s|(boxofyellow\/do-while-not-queued@).*([[:space:]]+#[[:space:]]+MAJOR_VERSION_TAG)$|\1v$MAJOR_VERSION\2|g" .github/workflows/main.yml.tmp > .github/workflows/main.yml
          rm .github/workflows/main.yml.tmp
          cat .github/workflows/main.yml

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .github/workflows/main.yml
          git commit -m "chore: Bump CI to $NEW_VERSION"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.VERSIONING_PAT }}